# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'form.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, QtSerialPort
from PyQt5.QtWidgets import QApplication, QMainWindow, QWidget, QToolBar, QHBoxLayout, QAction, QStatusBar, QLineEdit, QPushButton, QTextEdit, QVBoxLayout
from PyQt5.QtCore import Qt, pyqtSignal
from PyQt5.QtSerialPort import QSerialPortInfo, QSerialPort

class Ui_Widget(object):
    def setupUi(self, Widget):
        Widget.setObjectName("Widget")
        Widget.resize(800, 600)
        self.controls_group_box = QtWidgets.QGroupBox(Widget)
        self.controls_group_box.setGeometry(QtCore.QRect(30, 180, 731, 341))
        self.controls_group_box.setObjectName("controls_group_box")

        ## RIGHT BUTTON
        self.right_button = QtWidgets.QPushButton(self.controls_group_box)
        self.right_button.setGeometry(QtCore.QRect(600, 140, 81, 81))
        # Make right_button send "R" on press, stop on release
        self.right_button.pressed.connect(self.send_R_press)
        self.right_button.released.connect(self.send_R_release)

        font = QtGui.QFont()
        font.setPointSize(25)
        self.right_button.setFont(font)
        self.right_button.setObjectName("right_button")
        self.top_button = QtWidgets.QPushButton(self.controls_group_box)
        self.top_button.setGeometry(QtCore.QRect(510, 50, 81, 81))
        font = QtGui.QFont()
        font.setPointSize(25)

        ## TOP BUTTON
        self.top_button.setFont(font)
        self.top_button.setObjectName("top_button")
        # Make top send "T" on press, stop on release
        self.top_button.pressed.connect(self.send_T_press)
        self.top_button.released.connect(self.send_T_release)

        ## BOTTOM BUTTON
        self.bottom_button = QtWidgets.QPushButton(self.controls_group_box)
        self.bottom_button.setGeometry(QtCore.QRect(510, 230, 81, 81))
        # Make bottom send "D" on press, stop on release
        self.bottom_button.pressed.connect(self.send_D_press)
        self.bottom_button.released.connect(self.send_D_release)

        font = QtGui.QFont()
        font.setPointSize(25)
        self.bottom_button.setFont(font)
        self.bottom_button.setObjectName("bottom_button")
        self.home_button = QtWidgets.QPushButton(self.controls_group_box)
        self.home_button.setGeometry(QtCore.QRect(510, 140, 81, 81))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.home_button.setFont(font)
        self.home_button.setObjectName("home_button")

        ## LEFT BUTTON
        self.left_button = QtWidgets.QPushButton(self.controls_group_box)
        self.left_button.setGeometry(QtCore.QRect(420, 140, 81, 81))
        # Make left_button send "L" on press, stop on release
        self.left_button.pressed.connect(self.send_L_press)
        self.left_button.released.connect(self.send_L_release)

        font = QtGui.QFont()
        font.setPointSize(25)
        self.left_button.setFont(font)
        self.left_button.setObjectName("left_button")
        self.x_display = QtWidgets.QLabel(self.controls_group_box)
        self.x_display.setGeometry(QtCore.QRect(48, 70, 311, 99))
        font = QtGui.QFont()
        font.setPointSize(25)
        font.setBold(True)
        self.x_display.setFont(font)
        self.x_display.setAutoFillBackground(True)
        # self.x_display.setFrameShape(QtCore.Qt.QFrame.NoFrame)
        # self.x_display.setFrameShadow(QtCore.Qt.QFrame.Plain)
        self.x_display.setLineWidth(1)
        self.x_display.setMidLineWidth(0)
        self.x_display.setTextFormat(QtCore.Qt.AutoText)
        self.x_display.setScaledContents(False)
        self.x_display.setAlignment(QtCore.Qt.AlignCenter)
        self.x_display.setObjectName("x_display")
        self.y_display = QtWidgets.QLabel(self.controls_group_box)
        self.y_display.setGeometry(QtCore.QRect(50, 190, 311, 101))
        font = QtGui.QFont()
        font.setPointSize(25)
        font.setBold(True)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.y_display.setFont(font)
        self.y_display.setAutoFillBackground(True)
        # self.y_display.setFrameShape(QtCore.Qt.QFrame::Shape::NoFrame)
        # self.y_display.setFrameShadow(QtCore.Qt.QFrame::Shadow::Plain)
        self.y_display.setAlignment(QtCore.Qt.AlignCenter)
        self.y_display.setObjectName("y_display")
        self.connect_group_box = QtWidgets.QGroupBox(Widget)
        self.connect_group_box.setGeometry(QtCore.QRect(460, 20, 301, 141))
        self.connect_group_box.setObjectName("connect_group_box")

        ## COMBO BOX
        self.port_box = QtWidgets.QComboBox(self.connect_group_box)
        self.port_box.setGeometry(QtCore.QRect(110, 30, 161, 41))
        self.port_box.setObjectName("port_box")

        # Adding serial ports list
        serial_list = QSerialPortInfo.availablePorts()
        serial_ports = [port.portName() for port in serial_list]
        for port in serial_ports:
            self.port_box.addItem(port)

        ## CONNECT BUTTON
        self.connect_button = QtWidgets.QPushButton(self.connect_group_box)
        self.connect_button.setGeometry(QtCore.QRect(20, 80, 261, 41))
        self.connect_button.setObjectName("connect_button")
        self.connect_button.setText("Connect")
        self.connect_button.clicked.connect(self.handle_connect)

        # Create Serial Object
        self.serial = QSerialPort()
        self.serial.setBaudRate(QSerialPort.Baud115200)


        self.label = QtWidgets.QLabel(self.connect_group_box)
        self.label.setGeometry(QtCore.QRect(20, 40, 81, 16))
        # self.label.setAlignment(QtCore.Qt.Qt::AlignmentFlag::AlignLeading|QtCore.Qt.Qt::AlignmentFlag::AlignLeft|QtCore.Qt.Qt::AlignmentFlag::AlignVCenter)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Widget)
        self.label_2.setGeometry(QtCore.QRect(30, 20, 361, 101))
        font = QtGui.QFont()
        font.setPointSize(40)
        font.setBold(True)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(Widget)
        self.label_3.setGeometry(QtCore.QRect(30, 80, 361, 101))
        font = QtGui.QFont()
        font.setPointSize(40)
        font.setBold(True)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")

        self.retranslateUi(Widget)
        QtCore.QMetaObject.connectSlotsByName(Widget)

    def send_R_press(self):
        if self.serial.isOpen():
            self.serial.write(b"R")   # Send 'R' once when button pressed
            print("Sending R")

    def send_R_release(self):
        if self.serial.isOpen():
            self.serial.write(b"r")   # Optional: send lowercase 'r' to signal stop
            # print("Released R")

    def send_L_press(self):
        if self.serial.isOpen():
            self.serial.write(b"L")
            print("Sending L")

    def send_L_release(self):
        if self.serial.isOpen():
            self.serial.write(b"l")

    def send_T_press(self):
        if self.serial.isOpen():
            self.serial.write(b"T")
            print("Sending T")

    def send_T_release(self):
        if self.serial.isOpen():
            self.serial.write(b"t")

    def send_D_press(self):
        if self.serial.isOpen():
            self.serial.write(b"D")
            print("Sending D")

    def send_D_release(self):
        if self.serial.isOpen():
            self.serial.write(b"d")

    def handle_connect(self):
        # If already open, close it (toggle behavior)
        if self.serial.isOpen():
           self.serial.close()
           self.connect_button.setText("Connect")
           print("Disconnected from Arduino")
           return

        # Otherwise, open selected port
        selected_port = self.port_box.currentText()
        self.serial.setPortName(selected_port)

        if self.serial.open(QtCore.QIODevice.ReadWrite):
           self.connect_button.setText("Disconnect")
           print(f"Connected to {selected_port}")
           # Connect read signal
           self.serial.readyRead.connect(self.read_from_serial)
        else:
           print(f"Failed to connect to {selected_port}")

    def read_from_serial(self):
        while self.serial.canReadLine():
           data = self.serial.readLine().data().decode().strip()
           if(data[0] == "X"):
                self.x_display.setText(data)
           elif(data[0] == "Y"):
               self.y_display.setText(data)

    def retranslateUi(self, Widget):
        _translate = QtCore.QCoreApplication.translate
        Widget.setWindowTitle(_translate("Widget", "Nanopositioner Control"))
        self.controls_group_box.setTitle(_translate("Widget", ""))
        self.right_button.setText(_translate("Widget", "X+"))
        self.top_button.setText(_translate("Widget", "Y+"))
        self.bottom_button.setText(_translate("Widget", "Y-"))
        self.home_button.setText(_translate("Widget", "HOME"))
        self.left_button.setText(_translate("Widget", "X-"))
        self.x_display.setText(_translate("Widget", "No Position Data"))
        self.y_display.setText(_translate("Widget", "No Position Data"))
        self.connect_group_box.setTitle(_translate("Widget", ""))
        self.connect_button.setText(_translate("Widget", "Connect"))
        self.label.setText(_translate("Widget", "Select Port"))
        self.label_2.setText(_translate("Widget", "NANOPOSITIONER "))
        self.label_3.setText(_translate("Widget", "CONTROL"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Widget = QtWidgets.QWidget()
    ui = Ui_Widget()
    ui.setupUi(Widget)
    Widget.show()
    sys.exit(app.exec_())
